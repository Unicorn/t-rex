$gutter-remove: $grid-gutter * .5 * -1;
$gutter-half: $grid-gutter * .5;

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;
  flex-grow: 0;
  flex-shrink: 0;
  padding-right: $gutter-half;
  padding-left: $gutter-half;
}

@mixin neue\_grid {
  .row {
    box-sizing: border-box;
    display: flex;
    flex: 0 1 auto;
    flex-flow: row wrap;
  }

  .row:not(.container) {
    margin-right: $gutter-remove;
    margin-left: $gutter-remove;
  }

  .row.reverse {
    flex-direction: row-reverse;
  }

  .col.reverse {
    flex-direction: column-reverse;
  }

  $name: xs;
  .col-#{$name} {
    @include flexboxgrid-sass-col-common;
    flex-basis: auto;
  }

  @for $i from 1 through $grid-columns {
    .col-#{$name}-#{$i} {
      @include flexboxgrid-sass-col-common;
      flex-basis: 100% / $grid-columns * $i;
      max-width: 100% / $grid-columns * $i;
    }
  }

  @for $i from 0 through $grid-columns {
    .col-#{$name}-offset-#{$i} {
      @include flexboxgrid-sass-col-common;
      @if $i == 0 {
        margin-left: 0;
      } @else {
        margin-left: 100% / $grid-columns * $i;
      }
    }
  }

  .col-#{$name} {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }

  .start-#{$name} {
    justify-content: flex-start;
    text-align: left;
  }

  .center-#{$name} {
    justify-content: center;
    text-align: center;
  }

  .end-#{$name} {
    justify-content: flex-end;
    text-align: right;
  }

  .top-#{$name} {
    align-items: flex-start;
  }

  .middle-#{$name} {
    align-items: center;
  }

  .bottom-#{$name} {
    align-items: flex-end;
  }

  .around-#{$name} {
    justify-content: space-around;
  }

  .between-#{$name} {
    justify-content: space-between;
  }

  .first-#{$name} {
    order: -1;
  }

  .last-#{$name} {
    order: 1;
  }


  @each $name, $size in $breakpoints {
    @media only screen and (min-width: $size) {
      .col-#{$name} {
        @include flexboxgrid-sass-col-common;
        flex-basis: auto;
      }

      @for $i from 1 through $grid-columns {
        .col-#{$name}-#{$i} {
          @include flexboxgrid-sass-col-common;
          flex-basis: 100% / $grid-columns * $i;
          max-width: 100% / $grid-columns * $i;
        }
      }

      @for $i from 0 through $grid-columns {
        .col-#{$name}-offset-#{$i} {
          @include flexboxgrid-sass-col-common;
          @if $i == 0 {
            margin-left: 0;
          } @else {
            margin-left: 100% / $grid-columns * $i;
          }
        }
      }

      .col-#{$name} {
        flex-grow: 1;
        flex-basis: 0;
        max-width: 100%;
      }

      .start-#{$name} {
        justify-content: flex-start;
        text-align: left;
      }

      .center-#{$name} {
        justify-content: center;
        text-align: center;
      }

      .end-#{$name} {
        justify-content: flex-end;
        text-align: right;
      }

      .top-#{$name} {
        align-items: flex-start;
      }

      .middle-#{$name} {
        align-items: center;
      }

      .bottom-#{$name} {
        align-items: flex-end;
      }

      .around-#{$name} {
        justify-content: space-around;
      }

      .between-#{$name} {
        justify-content: space-between;
      }

      .first-#{$name} {
        order: -1;
      }

      .last-#{$name} {
        order: 1;
      }
    }
  }
}